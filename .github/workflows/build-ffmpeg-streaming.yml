name: Build FFmpeg with Streaming Support

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup environment
      run: |
        BUILD_DIR="$GITHUB_WORKSPACE/ffmpeg-build-linux"
        echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV
        mkdir -p "$BUILD_DIR"
        echo "Build directory: $BUILD_DIR"

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          nasm \
          yasm \
          git \
          pkg-config \
          cmake \
          zlib1g-dev \
          libssl-dev \
          libx264-dev \
          libmp3lame-dev \
          libopus-dev \
          libwebp-dev \
          wget \
          tar

    - name: Clone FFmpeg
      run: |
        git clone --depth 1 https://git.ffmpeg.org/ffmpeg.git ffmpeg-src

    - name: Configure FFmpeg
      run: |
        cd ffmpeg-src
        ./configure \
          --prefix="$BUILD_DIR" \
          --enable-gpl \
          --enable-version3 \
          --enable-nonfree \
          --enable-libx264 \
          --enable-libmp3lame \
          --enable-libopus \
          --enable-libwebp \
          --enable-shared

    - name: Build FFmpeg
      run: |
        cd ffmpeg-src
        make -j$(nproc)
        make install

    - name: Verify build
      run: |
        if [ -f "$BUILD_DIR/bin/ffmpeg" ]; then
          "$BUILD_DIR/bin/ffmpeg" -version | head -2
          echo "✅ Linux build successful!"
        else
          echo "❌ Linux build failed"
          exit 1
        fi

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-linux
        path: ${{ env.BUILD_DIR }}/bin/ffmpeg

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup environment
      run: |
        $buildDir = "$pwd\ffmpeg-build-windows"
        echo "BUILD_DIR=$buildDir" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
        New-Item -ItemType Directory -Path $buildDir -Force
        Write-Host "Build directory: $buildDir"

    - name: Install dependencies
      run: |
        choco install -y nasm --no-progress
        choco install -y yasm --no-progress
        choco install -y git --no-progress
        choco install -y make --no-progress
        choco install -y pkg-config --no-progress
        choco install -y cmake --no-progress

    - name: Clone FFmpeg
      run: |
        git clone --depth 1 https://git.ffmpeg.org/ffmpeg.git ffmpeg-src

    - name: Configure FFmpeg for Windows
      run: |
        Set-Location ffmpeg-src
        # Windows-specific configuration
        ./configure --prefix="$env:BUILD_DIR" --enable-gpl --enable-version3 --enable-nonfree --enable-shared --arch=x86_64 --target-os=win32

    - name: Build FFmpeg
      run: |
        Set-Location ffmpeg-src
        make -j4
        make install

    - name: Verify build
      run: |
        if (Test-Path "$env:BUILD_DIR\bin\ffmpeg.exe") {
          & "$env:BUILD_DIR\bin\ffmpeg.exe" -version | Select-Object -First 2
          Write-Host "✅ Windows build successful!"
        } else {
          Write-Host "❌ Windows build failed"
          Write-Host "Build directory contents:"
          Get-ChildItem "$env:BUILD_DIR" -Recurse | ForEach-Object { $_.FullName }
          exit 1
        }

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-windows
        path: ${{ env.BUILD_DIR }}/bin/ffmpeg.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup environment
      run: |
        BUILD_DIR="$GITHUB_WORKSPACE/ffmpeg-build-macos"
        echo "BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV
        mkdir -p "$BUILD_DIR"
        echo "Build directory: $BUILD_DIR"

    - name: Install dependencies
      run: |
        brew update
        brew install nasm yasm pkg-config cmake
        brew install x264 lame opus webp

    - name: Clone FFmpeg
      run: |
        git clone --depth 1 https://git.ffmpeg.org/ffmpeg.git ffmpeg-src

    - name: Configure FFmpeg for macOS
      run: |
        cd ffmpeg-src
        # macOS-specific configuration with proper library paths
        ./configure \
          --prefix="$BUILD_DIR" \
          --enable-gpl \
          --enable-version3 \
          --enable-nonfree \
          --enable-libx264 \
          --enable-libmp3lame \
          --enable-libopus \
          --enable-libwebp \
          --enable-shared \
          --extra-cflags="-I$(brew --prefix)/include" \
          --extra-ldflags="-L$(brew --prefix)/lib"

    - name: Build FFmpeg
      run: |
        cd ffmpeg-src
        make -j$(sysctl -n hw.ncpu)
        make install

    - name: Verify build
      run: |
        if [ -f "$BUILD_DIR/bin/ffmpeg" ]; then
          "$BUILD_DIR/bin/ffmpeg" -version | head -2
          echo "✅ macOS build successful!"
        else
          echo "❌ macOS build failed"
          echo "Build directory contents:"
          ls -la "$BUILD_DIR/" || true
          echo "FFmpeg source directory:"
          ls -la ffmpeg-src/ || true
          exit 1
        fi

    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: ffmpeg-macos
        path: ${{ env.BUILD_DIR }}/bin/ffmpeg

  report-status:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows, build-macos]
    if: always()
    steps:
    - name: Build status report
      run: |
        echo "=== BUILD STATUS REPORT ==="
        echo "Linux: ${{ needs.build-linux.result }}"
        echo "Windows: ${{ needs.build-windows.result }}"
        echo "macOS: ${{ needs.build-macos.result }}"
        echo "==========================="
